<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- namespace속성 : 아래에서 작성한 SQL을 호출할 때 같이 사용된다. -->			
<sqlMap namespace="boardSqlMap">
	
	<!-- 
		이 영역에 sql문에 맞는 태그를 사용하여 SQL문을 기술한다.
		
		사용할 수 있는 기본적인 태그들
		<select> ~~~ </select>
		<insert> ~~~ </insert>
		<update> ~~~ </update>
		<delete> ~~~ </delete>
	-->
	 
	<!-- 
		위 태그에서 사용되는 속성들
	 	1) id속성 : 해당 태그를 호출할 때 <sqlMap>태그의 namespace와 연결하여 사용하는 이름
	 	2) parameterClass속성 : sql문에 사용될 데이터가 들어있는 객체를 지정한다. 
	 						   (보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
	 						   (typeAlias로 지정한 alias명을 사용할 수 있다.)							  
		3) resultClass속성 : select문을 실행한 결과를 담을 객체를 지정한다.
							(보통 VO클래스나 자바의 자료형이름을 사용한다.)							 
	-->
	 
	<!-- 
	parameterClass에 설정되는 값이 단일값(즉 1개의 데이터)이면
	SQL문에 이 값을 나타내는 변수는 특별히 이름이 정해지지 않았다.
	(즉, 사용자가 임의로 지정할 수 있다.)
	-->
	
	<!-- insert 연습 -->
	<insert id="insertBoard" parameterClass="boVO">
		insert into jdbc_board (board_no, board_title, board_writer, board_date, board_content)
	 	values(board_seq.nextVal, #board_title#, #board_writer#, sysdate, #board_content#)
	</insert>
	
	<!-- delete 연습 -->
	<delete id="deleteBoard" parameterClass="String">
<!-- 	delete from jdbc_board where board_no=#board_no# -->
		delete from jdbc_board where board_no=#sss# <!-- 파라미터클래스가 String이기 때문에 값이 1개라는걸 인지하기때문에 아무값이나 넣어도 무방 -->
	</delete>
	
	<!-- update 연습 (parameterClass에 alias를 지정할 수 있다.) -->
	<update id="updateBoard" parameterClass="boVO">
		update jdbc_board set 
		board_title=#board_title#, board_writer=#board_writer#,
		board_date=sysdate, board_content=#board_content# <!-- to_date(#board_date#, 'yyyy-MM-dd hh24:mi:ss') 날짜변환 필수 -->
	 	where board_no=#board_no#
	</update>
	 
	<!-- select 연습 -->
	<select id="selectBoardList" resultClass="boVO">
		select * from jdbc_board
	</select>
	
	<select id="selectBoard" resultClass="boVO" parameterClass="String">
		select * from jdbc_board where board_no=#board_no#
	</select>
	
<!-- 	<select id="selectSearch" resultClass="boVO" parameterClass="boVO"> -->
<!-- 		select * from jdbc_board  -->
<!-- 		where board_title like '%'||#board_title#||'%' -->
<!-- 		or board_writer like '%'||#board_writer#||'%' -->
<!-- 		or board_content like '%'||#board_content#||'%' -->
<!-- 	</select> -->
	 
	<select id="selectSearch" resultClass="boVO" parameterClass="boVO">
		select * from jdbc_board
		<dynamic prepend="where"> <!-- 동적으로 쿼리문 작성할때 dynamic 태그를 사용하며 prepend는 접두사를 의미 -->
			<isNotEmpty property="board_title" prepend="or"> <!-- property값은 파라미터로 받는 vo의 멤버변수명과 일치해야함 -->
				board_title like '%' || #board_title# || '%'
			</isNotEmpty>
			<isNotEmpty property="board_writer" prepend="or">
				board_writer like '%' || #board_writer# || '%'
			</isNotEmpty>
			<isNotEmpty property="board_content" prepend="or">
				board_content like '%' || #board_content# || '%'
			</isNotEmpty>
		</dynamic>
	</select>

<!-- 	<select id="selectBoard" resultClass="int" parameterClass="String"> -->
<!-- 		select count(*) from jdbc_board where board_no=#board_no# -->
<!-- 	</select> -->
</sqlMap>